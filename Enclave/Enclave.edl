enclave {
    include "../ocall_types.h"

    trusted {
        public int generate_matrix_card_values(uint32_t client_id, [in, out, size=array_size] uint8_t *array, size_t array_size);
        public sgx_status_t ecall_validate_coords(uint32_t client_id, [in, count=num_coords] Coords* coords, size_t num_coords, [out] uint8_t *result, uint64_t timestamp);
    };

    untrusted {
        int ocall_write_sealed_data(int client_id, [in, size=sealed_data_size] uint8_t *sealed_data, size_t sealed_data_size);
        int ocall_get_sealed_data_size(int client_id, [out] size_t* file_size);
        int ocall_read_sealed_data(int client_id, [out, size=data_size] uint8_t* data, size_t data_size);

        /* define OCALLs here. */
        void ocall_print([in, string]const char* str);

        void ocall_println_string([in, string] const char *str);
        void ocall_print_string([in, string] const char *str);
        void ocall_print_error([in, string] const char *str);
        void ocall_text_print([in, size=data_size] uint8_t *data, uint32_t data_size);

        void ocall_copy_file([in, string] const char* src_path, [in, string] const char* dest_path);
    };
};
